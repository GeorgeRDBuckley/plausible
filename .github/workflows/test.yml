name: Test

on: push

jobs:
  plt_cache:
    name: Prepare PLT Cache
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Elixir
      id: beam
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.15.4' # [Required] Define the Elixir version
        otp-version: '26.0.2'      # [Required] Define the Erlang/OTP version
    - name: Restore PLT cache
      id: plt_cache
      uses: actions/cache/restore@v3
      with:
        key: |
          plt-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          plt-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-
        path: |
          priv/plts

    # Create PLTs if no cache was found
    - name: Create PLTs
      if: steps.plt_cache.outputs.cache-hit != 'true'
      run: | 
        mix deps.get
        mix dialyzer --plt


    - name: Save PLT cache
      uses: actions/cache/save@v3
      if: steps.plt_cache.outputs.cache-hit != 'true'
      with:
        key: |
          plt-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
        path: |
          priv/plts
  deps_cache:
    name: Prepare Deps Cache
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Elixir
      id: beam
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.15.4' # [Required] Define the Elixir version
        otp-version: '26.0.2'      # [Required] Define the Erlang/OTP version
    - name: Restore Deps cache
      id: deps_cache
      uses: actions/cache/restore@v3
      with:
        key: |
          deps-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          deps-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-
        path: |
          deps
          _build

    # Create Deps if no cache was found
    - name: Create Deps
      if: steps.deps_cache.outputs.cache-hit != 'true'
      run: | 
        mix deps.get
        MIX_ENV=test mix compile
        mix deps.compile
    - name: Save Deps cache
      uses: actions/cache/save@v3
      if: steps.deps_cache.outputs.cache-hit != 'true'
      with:
        key: |
          deps-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
        path: |
          deps
          _build
  test:
    name: Test
    needs: [deps_cache, plt_cache]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Elixir
      id: beam
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.15.4' # [Required] Define the Elixir version
        otp-version: '26.0.2'      # [Required] Define the Erlang/OTP version

    - name: Restore Deps cache
      id: deps_cache
      uses: actions/cache/restore@v3
      with:
        key: |
          deps-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          deps-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-
        path: |
          deps
          _build
    - name: Test
      run: |
        mix test
  static-analysis:
    name: Check Format
    needs: [deps_cache, plt_cache]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Elixir
      id: beam
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.15.4' # [Required] Define the Elixir version
        otp-version: '26.0.2'      # [Required] Define the Erlang/OTP version

    - name: Restore Deps cache
      id: deps_cache
      uses: actions/cache/restore@v3
      with:
        key: |
          deps-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          deps-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-
        path: |
          deps
          _build
    - name: Restore Deps cache
      id: deps_cache
      uses: actions/cache/restore@v3
      with:
        key: |
          deps-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          deps-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-
        path: |
          deps
          _build
    - name: Test
      run: |
        mix format --check-formatted
        mix dialyzer
        mix credo
